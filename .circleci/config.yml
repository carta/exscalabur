version: 2.1

aliases:
  - &only-master-filter
    filters:
      branches:
        only:
          - master
  - &ignore-master-filter
    filters:
      branches:
        ignore:
          - master

executors:
  scala-executor:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      SBT_VERSION: 1.3.8
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

commands:
  compile:
    description: Compiles
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile
          command: sbt compile
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

jobs:
  tests:
    executor: scala-executor
    steps:
      - checkout
      - compile
      - run:
          name: Run tests
          command: sbt test
  publish-snapshot:
    executor: scala-executor
    steps:
      - checkout
      - run:
          name: Publish to cloudsmith snapshots
          command: |
            PROJECT_VERSION=$(sbt nextVersion | tail -2 | head -1)
            RELEASE_VERSION="${PROJECT_VERSION}-${CIRCLE_SHA1}"

            echo "Attempting release of ${RELEASE_VERSION}"
            if [[ ${RELEASE_VERSION} == *"SNAPSHOT"* ]]; then
              sbt release release-version ${RELEASE_VERSION} next-version ${PROJECT_VERSION}
            fi
            exit 1

  publish-release:
    executor: scala-executor
    steps:
      - checkout
      - run:
          name: Publish to cloudsmith releases
          command: sbt release with-defaults

workflows:
  branch:
    jobs:
      - tests:
          <<: *ignore-master-filter
      - authorize-publish:
          type: approval
          <<: *ignore-master-filter
      - publish-snapshot:
          <<: *ignore-master-filter
          context: org-Global
          requires:
            - authorize-publish
            - tests

  master:
    jobs:
      - tests:
          <<: *only-master-filter
      - authorize-publish:
          type: approval
          <<: *only-master-filter
      - publish-release:
          <<: *only-master-filter
          context: org-Global
          requires:
            - authorize-publish
            - tests
